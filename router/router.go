/*
 * Material Management
 *
 * Materials API
 *
 * API version: 2.0
 * Contact: kenny.chen@iii.org.tw
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package router

import (
	"fmt"
	"material-management/middleware"
	"net/http"

	"github.com/gorilla/mux"
	httpSwagger "github.com/swaggo/http-swagger"
)

func index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "WORK!")
}

// NewRouter is exported and used in main.go
func NewRouter() *mux.Router {

	r := mux.NewRouter() //創建一個路由器

	//從請求URL中提取分段，然後作為命名參數傳入路由處理程序供使用
	r.HandleFunc("/", index).Methods("GET", "OPTIONS")
	r.HandleFunc("/log", middleware.LogPost).Methods("POST", "OPTIONS")
	r.HandleFunc("/logs", middleware.LogsGet).Methods("GET", "OPTIONS")
	r.HandleFunc("/logs/latest", middleware.LatestLogsGet).Methods("GET", "OPTIONS")
	r.HandleFunc("/material", middleware.MaterialPost).Methods("POST", "OPTIONS")
	r.HandleFunc("/materials", middleware.MaterialsGet).Methods("GET", "OPTIONS")
	r.HandleFunc("/materials/latest", middleware.LatestMaterialsGet).Methods("GET", "OPTIONS")
	r.HandleFunc("/material/{id}", middleware.MaterialDelete).Methods("DELETE", "OPTIONS")
	r.HandleFunc("/material/{id}", middleware.MaterialPut).Methods("PUT", "OPTIONS")

	//swagger

	sh := http.StripPrefix("/doc", http.FileServer(http.Dir("./docs/")))
	r.PathPrefix("/doc/").Handler(sh)

	r.PathPrefix("/swagger").Handler(httpSwagger.Handler(
		httpSwagger.URL("/doc/swagger.json"), //The url pointing to API definition
		httpSwagger.DeepLinking(true),
		httpSwagger.DocExpansion("none"),
		httpSwagger.DomID("#swagger-ui"),
	))

	return r
}
